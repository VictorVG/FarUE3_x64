.Language=English,English
.PluginContents=Far plugins database editor
.Options CtrlStartPosChar=|

@main
$^Main window
^#Description#

  This window allows to view plugins data stored in local and global profiles,
edit them, export to a file and import the previously exported file.
The title bar indicates which plugin DB is opened and current subkey.
Local and global DB profiles are denoted by a #LOCAL# and #GLOBAL#.
Window contains the contents of the current subkey, grouped by types: subkeys (marked with # #), numbers, strings, data.
For data are showed both source and value if possible.

^#Hotkeys#
  #Esc#,#BS#   - |Exit to level up. From upper level exit from DBEdit.
  #F10#      - |Exit from DBEdit immediately.
  #Enter#    - |Enter to subkey or ~edit variable value~@edit@.
  #F1#       - |This help.

  #F2#       - |Export data under cursor.
  #F3#       - |Import data from file.

  #F4#       - |~Edit variable value~@edit@.
  #F5#       - |~Copy variable/subkey~@edit@.
  #Ins#      - |~Create new variable/subkey~@edit@.
  #Del#      - |Delete existing variable/subtree.

  #CtrlPgUp# - |Jump to local/global profile select. On root - ~select plugin~@psel@.
  #CtrlS#    - |~Select plugin~@psel@.
  #CtrlC#    - |Jump to same subkey in other DB of current plugin.
  #CtrlG#    - |Jump to same subkey in global DB of current plugin.
  #CtrlL#    - |Jump to same subkey in local DB of current plugin.

@=

 ~Contents~@contents@

@edit
$^Edit/copy/create new variable/subkey in dialog mode
^#Description#
 In this window can create new subkey or variable, edit it or copy it to another place.
Dialog elements are showed and described lower.

  #Parent# - |Key which contains this variable or subkey. May be edited only while copying.
  #Name#   - |Name of variable or subkey. May be edited only while creating or copying.
  #Type#   - |Type of  variable or subkey. May be edited only while creating.
  #Value#  - |Value of  variable or subkey. Not showed for subkeys. May be edited only while creating and copying.
For data value editing is performed in internal Far editor by #F4# pressed.
  #OK#     - |Save changes.
  #Cancel# - |Discard changes.

@=

 ~Contents~@contents@

@psel
$^Plugin select
^#Description#
  This menu allows to select currently needed plugin DB.

^#Hotkeys#
  #Enter# - |Select new plugin.
  #Esc#   - |Discard selection.
  #F1#    - |This help.

  #CtrlA# - |Show full information for all plugins.
  #CtrlS# - |Show names only for all plugins.
  #CtrlF# - |Show full information for plugins with non-empty DB.
  #CtrlG# - |Show full information for plugins with non-empty global DB.
  #CtrlL# - |Show full information for plugins with non-empty local DB.

@=

 ~Contents~@contents@

@list
$^Script macros list
  #Key#          |  #Script#

  #CtrlShiftF5# - |~Main window~@main@.
  #AltShiftF3# - |Import dialog.

@=

 ~Contents~@contents@

@prefix
$^Command line
^#list#

  #dbshow:[<plugin>][root]#              - |Show data from DB. Root: string like #"GLOBAL/IgorZ/'//' sample"# - show subkey specified.
If subkey is not exists, used nearest existing above the tree. #/# - subkey names delimiter.
In subkey name #/# is replaced by #//#.
If #LOCAL#/#GLOBAL# omitted, subkey is searched in both DBs and best fit selected.
If plugin name is not set, used current selected (or LuaMacro, if plugin was not selected). Plugin name must be in #<# and #>#.

  #dbexp:[<plugin>][pattern] [filename]# - |Export variable/subkeys int file. If plugin name is not set, used current selected
(or LuaMacro, if plugin was not selected). Plugin name must be in #<# and #>#.
If pattern is set, exported all variables/subkeys with names, which contained pattern. If pattern is not set, all base exported.
If filename contains spaces, it must be quoted. Else filename is all characters after last space.
If filename is omitted, it compiled from current path, plugin name, pattern (or "All") and #.dbedit# extension.
If patern contains spaces and filename is omitted, than pattern must be quoted.

  #dbimp:[<plugin>][file name]#          - |Import into DB from file. If plugin name is not set, used current selected
(or LuaMacro, if plugin was not selected). Plugin name must be in #<# and #>#.
If file name in not set, input file name dialog showed.

@=

 ~Contents~@contents@

@module
$^Use script as module

  Script automatically adds self into modules list.

^#Possible call variants#

   1. #require"DBEdit"([<parameters table>])# or #require"DBEdit".Main([<parameters table>])#.
      |In the table lists actions and additional parameters.

^Fields

      #Actions#. Commands executed. If more than one, all are performed.
Order of executing denotes by order in action list from this help.
        #export#   - |Export from DB into file. Value of command - string-pattern of exported variables/subkeys names.
        #import#   - |Import from file to DB. Value of command - true/false.
        #show#     - |Show data from DB. Value of command: boolean true - show all DB,
table like #{"GLOBAL","IgorZ","'/' sample"}# or string like #"GLOBAL/IgorZ/'//' sample"# - show subkey specified.
If subkey is not exists, used nearest existing above the tree. In string #/# - subkey names delimiter.
In subkey name #/# is replaced by #//#.
If #LOCAL#/#GLOBAL# omitted, subkey is searched in both DBs and best fit selected.

      #Parameters#. Strings.
        #FileName# - |File name for export/import.
If omitted, on export compiled from current path, plugin name, pattern and #.dbedit# extension, on import requested.
        #plugin#   - |Plugin name, for which DB is opened.
If omitted, used previous plugin DB (or LuaMacro, if plugin was not selected).
If plugin name is incorrect or not found, plugin select menu is showed. On #Esc# script exiting.
Specified plugin becomes default for script.

   2. #require"DBEdit".Show([<subkey>[,<plugin>]])#.
      |Show data from DB.
        #Subkey#  - |String or table, as #show# in first variant. If omitted, root is showed.
        #Plugin#  - |String, plugin name, which DB must be showed.
If omitted, used previous plugin DB (or LuaMacro, if plugin was not selected).
If plugin name is incorrect or not found, plugin select menu is showed. On #Esc# script exiting.
In this mode default plugin does not changes.

   3. #require"DBEdit".Import([<file>[,<plugin>]])#.
      |Import from file to DB.
        #File#    - |String, file name to import. If omitted, requested.
        #Plugin#  - |String, plugin name in which DB file content will be imported.
If omitted, used previous plugin DB (or LuaMacro, if plugin was not selected).
If plugin name is incorrect or not found, plugin select menu is showed. On #Esc# script exiting.
In this mode default plugin does not changes.

   4. #require"DBEdit".Export([<pattern>][,<file>[,<plugin>]]])#.
      |Export from DB into file by pattern.
        #Pattern# - |String. Variable and subkey names, that match to pattern, will be exported. If omitted, all will be exported.
        #File#    - |String, file name to export. If omitted, compiled from current path, plugin name, pattern and #.dbedit# extension.
        #Plugin#  - |String, plugin name, data from which DB will be exported into file.
If omitted, used previous plugin DB (or LuaMacro, if plugin was not selected).
If plugin name is incorrect or not found, plugin select menu is showed. On #Esc# script exiting.
In this mode default plugin does not changes.

^#Sample#

  local DBE = require"DBEdit"

  DBE() -- Show DB of default plugin

  DBE({plugin="EMenu",export="GUI"}) -- export parameters relating to the operation in the GUI mode of EMenu plugin into file with default name

  DBE{
      plugin   = "LuaMacro",
      FileName = [[F:\MyConfig\MyBookmarks.txt]],
      import   = true,
      show     = "GLOBAL/IgorZ/BookmarkManagerData"
     } -- import saved bookmarks of Bookmark manager and look result

@=

 ~Contents~@contents@

@about
$^About

 Author:       #IgorZ#

 Version:      #2.1.4#

 Net address: ~http://forum.farmanager.com/viewtopic.php?t=10120~@http://forum.farmanager.com/viewtopic.php?t=10120@
@=‗

  DBEdit lets to see plugins data from local and global profiles, edit it, export into file and import from early exported file.
Script may be used ad ~macro~@main@, ~module~@module@, or ~from command line~@prefix@. Script adds self into plugin menu.


@=

 ~Contents~@contents@

@contents
$^Contents

  ~Main window~@main@
  ~Edit/copy/create new variable/subkey in dialog mode~@edit@
  ~Plugin select~@psel@
  ~Script macros list~@list@
  ~Command line~@prefix@
  ~Use script as module~@module@

  ~About~@about@
