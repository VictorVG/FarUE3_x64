.Language=English,English
.PluginContents=Duplicate Fighter

@Contents

 #Scope of processing:#
   Either range of lines containing selection or the entire editor
contents (if there is no selection).

 #Stream blocks:#
   The entire line is processed if any part of it is selected.

 #Vertical blocks:#
   Only selected part of the line is processed. The action (if any) will be applied to the entire line.

 #A definition of "duplicate":#
   Two lines are considered "duplicate" with regards to each other if they are identical (or become identical
after some conversion specified by the user).

 #Examples:#
   a) two lines are identical.
   b) two lines become identical after stripping white spaces from both their ends.
   c) two lines begin with the same 20 character sequence.

 #The dialog#

 ╔═══════════════════════ Duplicate Fighter ═══════════════════════╗
 ║                                                                 ║
 ║ (•) 1 Remove duplicates       [ ] Keep empty lines              ║
 ║ ( ) 2 Clear duplicates        [ ] Show statistics               ║
 ║ ( ) 3 Remove non-uniques                                        ║
 ║ ( ) 4 Clear non-uniques                                         ║
 ║                                                                 ║
 ║ [x] Use Expression            [ ] Convert to boolean            ║
 ║ Expression:                                                     ║
 ║ L:lower()                                                      ↓║
 ║                                                                 ║
 ╟─────────────────────────────────────────────────────────────────╢
 ║                        { OK } [ Cancel ]                        ║
 ╚═════════════════════════════════════════════════════════════════╝

 #Actions:#
   #(•) Remove duplicates# : remove all duplicate lines except the first one in each group of duplicates
   #(•) Clear  duplicates# : clear  all duplicate lines except the first one in each group of duplicates
   #(•) Remove non-unique# : remove all duplicate lines (including the first one)
   #(•) Clear  non-unique# : clear  all duplicate lines (including the first one)

 #[x] Keep empty lines#
   If checked then empty lines are skipped (not considered duplicate). The lines consisting entirely
   of whitespace characters are also skipped.

 #[x] Show statistics#
   If checked then some statistical data is shown after the work is done.

 #[x] Use Expression#
   If unchecked then two lines are considered duplicate only when they are identical.
   If checked then the #Expression# edit box should contain a #Lua expression# that will be applied to each
selected line (or part of it in the case of a vertical block) and the results of the expression will be
compared rather than the lines themselves.

   #*# Expressions can use the variable #L# that is the text of the line.
   #*# If the expression evaluates to a string or a number then this is the value to be used in comparisons.
   #*# If the expression evaluates to false/nil/nothing then the line is considered a NON-DUPLICATE.
   #*# Otherwise the value of line used in comparisons is true.

   #Examples of expressions resulting in either string or number:#
     #L:lower()#
     Two lines are considered duplicates if they only differ by case.
     #L:sub(10,20)#
     Two lines are considered duplicates if their [10,20] substrings are equal.
     #L:len()#
     Two lines are considered duplicates if they have the same length.
     #L:match("foobar")#
     Two lines are considered duplicates if they both contain "foobar".

 #[x] Convert to boolean#
   If checked then the result of expression is converted to boolean that is: not not X.
   In this case:
     - a line with value of false is NOT a duplicate, it does not participate in comparisons.
     - a line with value of true participates in comparisons.

   #Examples of expressions resulting in a boolean:#
     #L:match("foobar")#
     This line is considered duplicate if it contains "foobar".
     #not L:match("foobar")#
     This line is considered duplicate if it does not contain "foobar".
     #L:match("foo") and L:match("bar")#
     This line is considered duplicate if it contains both "foo" and "bar".
