.Language=English,English
.PluginContents=EnvMan

@Contents
$ #EnvMan#

    This plugin's purpose is to allow quick and easy editing of environment variables.
    It is especially useful for people who use several toolchains with program name conflicts, or different versions of the same command-line software packages.

    The plugin allows users to pre-configure sets of environment variable settings, and quickly enable or disable these sets at any time.
    This applies not only to #%PATH%#, but any other environment variables as well.

    The plugin saves the state of the environment when Far Manager is started.
Then, it applies each enabled entry, one on top of the other.
    The user can "chain" entries by including the old value of the variable in the new value, for example: #PATH=%PATH%;C:\ExamplePath#

    To set up and use the plugin, open it from Far's ~"Plugin commands"~@:PluginCommands@ menu.
This will bring up the ~settings list~@MainMenu@.
    You may also ~configure~@Configuration@ a list of environment variables for EnvMan to ignore using the ~"Plugins configuration"~@:PluginsConfig@ menu.
    You may also ~import environment changes from a batch file~@ImportFromBatch@.

    EnvMan is also controllable using the ~command line~@CommandLine@, with the #envman:# prefix.
You may use the same syntax with the #callplugin# macro function.

@MainMenu
$ #EnvMan entry list#

    This menu allows enabling, disabling, and editing the list of available sets of environment variable settings.

    The following commands are available:

 #+/-/Space#    - enable, disable or toggle the selected entry.
 #Ins#          - insert a new entry before the cursor position.
 #Del#          - delete the selected entry.
 #F4#           - edit the selected entry.
 #Alt-F4#       - edit the selected entry in Far's text editor.
 #F5#           - copy the selected entry.
 #Ctrl-Up/Down# - move the current set up or down.
 #Shift-F4#     - edit Far's environment block in Far's text editor.
 #Shift-Delete# - cut the selected entry to clipboard as text.
 #Ctrl-Insert#  - copy the selected entry to clipboard as text.
 #Shift-Insert# - paste an entry as text from clipboard.
 #F2#           - open the plugin's ~configuration~@Configuration@.

    The commands #Ins#, #F4# and #F5# will ~open a dialog~@Editor@ allowing to edit the entry's details.
    For #Ins# and #F5#, the new entry will be inserted if the changes in the dialog are accepted (the dialog is closed by selecting #OK#).

    Separators can be created by moving an entry past the upper or lower edge of the list.
    Similarly, separators can be removed by moving entries in the opposite direction - separators will disappear when there are no entries between them and the edge of the list.

    Changes are applied to the environment as soon as the menu is closed.
    If you edited the settings in another Far instance and would like to apply them to the current instance, simply open and close the sets list.

    ~Back to Contents~@Contents@

@Editor
$ #EnvMan editor dialog#

    This dialog allows editing one environment variable configuration entry.

    The #Name# and #Enabled# fields are self-explanatory.
If you would like to force a specific letter as the menu item hotkey, prefix it with #&#.
Use #&&# to insert a single ampersand.

    The multi-line edit box below defines the changes to the environment performed by the current entry.
    The format is similar to the format of the standard #set# command (bar the option switches).
    Each line must be in the format #NAME#=#Value#.
    The value may contain references to other environment variables, using the standard syntax #%VARNAME%#.
    Thus, it is possible to append to an existing environment variable using the syntax #NAME=%NAME%;TextToAppendHere#.

    ~Back to EnvMan entry list~@MainMenu@

@Configuration
$ #EnvMan configuration#

    Currently EnvMan has only one configuration option: a list of environment variable names to ignore.
    You may delimit several variables using commas and semicolons.
    The default setting includes #FARENV_EXPORT_HWND#, a service variable used by the FarEnv plugin.

    ~Back to Contents~@Contents@

@CommandLine
$ #Command line#

    You may control EnvMan using the Far command line and the #envman:# prefix.
The syntax is as follows:

    If the command line is empty, EnvMan will display the ~entry list~@MainMenu@, but it will not display any warnings regarding external environment/configuration changes.
    Otherwise, it must begin with a character indicating the operation to perform: either #+#, #-#, #*#, #>#, #}#, #<# or #e#.

    #+#, #-# and #*# will respectively enable, disable or toggle the configuration specified after the symbol. 
    For example, #envman:+Delphi# will enable the #Delphi# configuration entry.

    #># allows exporting Far's environment to a file. 
    It is similar to #set > file.txt#, however there may be some differences due to cmd-specific variables like PROMPT, Far plugins, or 64-bit architecture specifics if you use a 64-bit system.
    EnvMan will also not include ignored variables as set in its configuration.
    Also, if you use the Unicode version of the plugin, the output will be saved in Unicode, unlike when using #set#.
    You can use #}# to dump the raw, null-separated environment block.

    Similarly, #<# allows you to import the environment as a whole from a file (e.g.: #envman:<file.txt#).
    The file must contain one #NAME=Value# pair per line.
    This feature can be used to easily ~import environment changes from a batch file~@ImportFromBatch@.

    #e# will open a Far editor with the current environment (same as pressing #Shift-F4# in the ~entry list~@MainMenu@).

    You may also use the same syntax using the experimental #callplugin# ~macro~@:KeyMacro@ function.
    EnvMan's SysID is #0x4D766E45#.
    The above example (to enable the #Delphi# configuration entry) will look like this as a macro call: #callplugin(0x4D766E45, "+Delphi")#

    ~Back to Contents~@Contents@

@ImportFromBatch
$ #Import from a batch file#

    Some software packages (e.g. Microsoft Visual Studio) include batch files which set up the environment for use with the software's command-line tools.
    This section explains how you can import the changes set by these batch files into an EnvMan configuration.

    First, you must create a new batch file which calls the software package's batch file, then saves the environment to a file.
    This is required because child processes spawned by Far have their own environment block, and Far / EnvMan can't "see" the environment changes performed by child processes.
    Thus, your batch file should look something like this:

    #call "C:\Program Files\Product name\setupenv.bat"#
    #set > env.txt#

    When launched, your batch file should save the environment, containing changes from the respective .bat file, to the file #env.txt#. 
    The next step is to import the environment into Far. You can do this using the ~EnvMan command line~@CommandLine@ as follows:

    #envman:<env.txt#

    The environment should now be imported into Far's process. 
You can verify this by running the #set# command and examining the output.
    Now, if you try to open EnvMan using the ~Plugin commands~@:PluginCommands@ menu, EnvMan will detect an unmanaged change to the environment, and offer several options.
Here, select #Import#.
    An EnvMan configuration dialog will appear.
Here, you can enter a meaningful name, review the settings, and finally save the new configuration.

    ~Back to Contents~@Contents@
