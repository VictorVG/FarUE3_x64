.Language=English,English
.PluginContents=FarColorer

@contents
$^#FarColorer

    ~Settings menu.~@settingsmenu@
    ~Plugin setup.~@config@
    ~Schemes settings.~@confighrc@
    ~Logging settings.~@configlog@
    ~Command line support.~@cmdline@
    ~Plugin's menus.~@menu@

    ~Using a plugin in macros:~@MacroCallPlugin@
      ~Macro functions.~@MacroCall@
      ~Plugin Guids.~@PluginGuids

    ~About authors.~@author@

@settingsmenu
$#Settings

  #Main settings#
    Open dialog for main settings.

  #Schemes settings#
    Open dialog for shemes settings. The dialog does not work if the plugin is disabled.

  #Logging settings#
    Open dialog for log settings.

  #Test schema library#
    Tests ability to load all the language of schemes, taking the path to catalog.xml from the settings window.

@config
$^#FarColorer's settings.#

  #Enabled#
     Enable/Disable FarColorer.

  #catalog.xml file:#
     Full file path sets default catalog file for FarColorer. If this field is empty FarColorer trying to find the file automatically in a subfolder of "base" parent directory plugin.

  #Users file of schemes#
     Full file path sets the users file of schemes.

  #Users file of color styles#
     Full file path sets the users file of color styles.

  #Color style:#
     Choose a color style, which will be used for coloring text. The choice does not work if the plugin is disabled.

  #TrueMod Enabled#
     Enable/Disable TrueMod in plugin.

  #TrueMod color style:#
     Choose a color style, which will be used for coloring text in TrueMod. The choice does not work if the plugin is disabled.

  #Pairs#
     Allocate or not paired language elements (brackets, quotes).

  #Syntax#
     Turns on display of syntax

  #Classic outline style#
     In classic style displays only the name of the function. Otherwise show the beginning of the line number, then the first letter in the function and the function name itself.

  #Change background editor#
     In the set condition, FarColorer set in System Preferences color of "Plain Text" color group "editor" such as and the default color for the color scheme FarColorer. The effect is visible on the files, the number of rows in less than window height editor.

  #Cross#
     [ ] Do not show ever
     [?] Show if included in the scheme.
     [x] Always Show.

  #Cross style#
     Cross style shown when "[x] Cross".

  #Period for build#
     The frequency, in milliseconds, at which Far call "background" parsing of the file in Colorer. The lower value - the faster large file is drawn, but the responsiveness of the screen drops.

  #{ Ok }#
     Closes dialog and save settings.

@confighrc
$^#Schemes settings#
    For each of the selected schemes, a list of parameters that affect the mapping coloring. Parameter value - the value set for this parameter. Values of the form <default-znach.> shows that the parameter is "znach." It is set in the system (non-user) settings of the scheme or scheme is taken from default. Save all the changes occurs after clicking "OK" button.

@configlog
$^#Logging settings#

  #Enable logging#
    Enable/Disable logging.

  #Logging level#
    Log level from list.

  #Log path#
    Path to folder where log files will be stored.

@cmdline
$# Command line support
    You can use the plugin from FAR's command line with prefix 'clr:' to view files with syntax highlighting in FarColorer's internal viewer. To view file you have to specify file name after the 'clr:' prefix in FAR's command line. This function is equal to #colorer.exe# program features, but doesn't load HRC database each time, so it works faster.

@add
$# Outliner
    Here you can see a list of all functions or syntax errors found. Choose any item to go to corresponding line in text.

    You can use keyboard filter to quickly search for required items:

    #Ctrl-Left/Right#
      Expand-Collapse level of Outliner.

    #Ctrl-Up/Down#
      Move to next/previous item both in outliner and in source code.

    #Ctrl-Enter#
      Close the outliner and insert current item into the cursor position.

    #Enter#
      Close the outliner and jump to the selected item.

    #Tab#
      Complementing filter symbols, written after '?' in the field of display filter.

    #Symbol keys [0-9a-z;:-_]#
      Filter out the outliner items against entered filter.

@menu
$#FarColorer operation

  #1 List types#
    Lists all supported file types. You can choose any of them to use with current editor.

  #2 Match pair#
    Searches paired bracket (or any other pair structure) of the current region under cursor and jumps there.

  #3 Select block#
    Moves cursor to start of block and selects it all. You can call this function as on block limits as inside it. In second case FarColorer will find start and end of nearest block automatically.

  #4 Select pair#
    Selects pair block - but don't selects pair structures at start and end.

  #5 Outliner List#
    Shows all outlined regions in current file. There you can choose and jump into any of them, also you can use there any alphabetic symbols to create filters.

  #6 Errors List#
    As previous - but shows all errors in the text.

  #*# All these features are depend on the content of language scheme. All information is taken from syntax regions analysis.

  #7 Select region#
    Selects region under cursor.

  #Region info#
    Displays the name of the region and the scheme under the cursor.

  #8 Find function#
    Searches function name under cursor in outliner view, and jumps there.

  #9 Update highlight#
    Updates syntax highlighting in current editor. Use it, ifsome problems occurs in current syntax.

  #R Reload schema library#
    Reload the configuration plugin and library schemes.

  #C Configuration#
    Calls FarColorer ~configuration menu~@settingsmenu@.

@PluginGuids
$# Plugin Guids
   Plugin GUID - {D2F36B62-A470-418d-83A3-ED7A3710E5B5}

   #Dialog#
    Main settings - {87C92249-430D-4334-AC33-05E7423286E9}
    Scheme settings - {0497F43A-A8B9-4af1-A3A4-FA568F455707}
    Logging settings - {3D1031EA-B67A-451C-9FC6-081320D3A139}
    Define hot key - {C6BE56D8-A80A-4f7d-A331-A711435F2665}

   #Menu#
    Main menu in editor - {45453CAC-499D-4b37-82B8-0A77F7BD087C}
    Settings - {63E396BA-8E7F-4E38-A7A8-CBB7E9AC1E6D}
    Syntax choose - {46921647-DB52-44CA-8D8B-F34EA8B02E5D}
    Color styles - {18A6F7DF-375D-4d3d-8137-DC50AC52B71E}
    Outliner/error list - {A8A298BA-AD5A-4094-8E24-F65BF38E6C1F}

   #Message#
    Error - {0C954AC8-2B69-4c74-94C8-7AB10324A005}
    Reload base - {DEE3B49D-4A55-48a8-9DC8-D11DA04CBF37}
    Nothing found - {AB214DCE-450B-4389-9E3B-533C7A6D786C}
    Region name - {70656884-B7BD-4440-A8FF-6CE781C7DC6A}

@MacroCallPlugin
$# Using a plugin in macros
    The plugin can be called from a macro using the macro function Plugin.Call(GUID,[param]).
    Call format:

       #Plugin.Call("D2F36B62-A470-418d-83A3-ED7A3710E5B5",<Params>)#

    Here:
       #D2F36B62-A470-418d-83A3-ED7A3710E5B5#
          ~Guid of the plugin~@PluginGuids@

       #<Params>#
          different parameters

     ~Macro functions.~@MacroCall@

@Macrocall
$#Macro Functions

#Working with macro.#

   Format call functions #Plugin.Call("D2F36B62-A470-418D-83A3-ED7A3710E5B5",<function>)#, or #Plugin.SyncCall#.
   Challenge all functions register-independent.
   Return value, if not specified separately, "True" - Successful, "False" is an error.

#Work with global settings#
   Restrictions on macroregions are not installed.

  #...,"settings",<name>,<param>)#

     <Name> - takes the following values:

        "MENU" - opens the settings menu. Default value If <name> empty.
        "Main" - opens the window of the main settings
        "LOG" - opens the logging settings window
        "HRC" - opens the scheme parameter settings window
        "RELOAD" - restarts all the settings of the plugin and open editors. Including the library scheme.
        "Status" - the status of the plugin activity
          <Param> - number:
             0 - Disabled;
             1 - included;
             Either boolean: "false" -thel, "true" - incl.
          If a new status with a reboot of all settings is specified. Returns the previous value.
          If not specified, returns the current value.
        "Savesettings" - saves the settings of the plugin.

#Work with menu#
   It works only in MACROAREA_EDITOR.

  #...,"Menu")#

     Opens the plug-in menu in the editor.

#Working with file types#
    It works only in MACROAREA_EDITOR.

   #...,"Types",<Action>,<Param>)#

      <Action> - takes The following Values:

         "MENU" - opens the menu of selecting files.
         "List" - returns an array of titles of all available file types.
         "Get" - returns the current type (first parameter) and group group (second parameter).
         "SET" - sets for the file open in the editor specified type.
           <Param> - row: File Type

#Working with file types#
   Restrictions on macroregions are not installed.

   All changes apply only for the current plug-in session. To save the changes, you must call "SaveSettings" to reset "Reload".

  #...,"Paramsoftype",<Action>,<Param1>,...)#

        "List" - List of type parameters
           <Param1> - type name. Line. Register-and-dependent.
          Returns
           <Outparam1> - an array of parameter names.
           <Outparam2> - an array of values of these parameters. In the case of the lack of values of the parameter returns "nil".
        "Get" - Returns the value of the parameter. Type - always string.
           <Param1> - type name. Line. Register-and-dependent.
           <Param2> - the name of the parameter. Line. Register-and-dependent. In the case of the lack of value "nil" is returned.
        "SET" - Sets the value for the parameter or deletes it.
           <Param1> - type name. Line. Register-and-dependent.
           <Param2> - the name of the parameter. Line. Register-and-dependent.
           <Param3> - the value of the parameter. Line. If not transmitted, the user value of the parameter is deleted. If an empty string is transmitted, this value is assigned to the parameter.

#Work with brackets#
    It works only in MACROAREA_EDITOR.

   #...,"Brackets",<Action>)#

      <Action> - takes The following values:

         "Match" - find a steam bracket.
         "SELECTALL" - highlight the block with brackets.
         "Selectin" - highlight the block between the brackets.

#Working With Regions#
    IT Works Only in MACROAREA_EDITOR.

   #...,"Region",<Action>)#

      <Action> - takes The following values:

         "SELECT" - Choose The Current Region.
         "Show" - Show The Window with the Data of the Region.
         "List" - Returns a description of the region. The first parameter is region, the second is scheme.

#Working with features#
   It works only in MACROAREA_EDITOR.

  #...,"Functions",<Action>)#

     <Action> - takes the following values:

        "Show" - show the window with a list of functions.
        "Find" - find a function on which the cursor stands.
        "List" - Returns the array of all the functions found and the array of the lines in which they are declared.

#Working with errors#
   It works only in MACROAREA_EDITOR.

  #...,"Errors",<Action>)#

     <Action> - takes The following values:

        "Show" - show the window with a list of errors.
        "List" - Returns the array of all the errors found and the array of the lines in which they are found.

#Work with the parameters of the current editor#
   When you closes the editor, these parameters are not saved. It works only in MACROAREA_EDITOR.

  #...,"Editor",<Action>,<Param1>,...)#

     <Action> - takes The following values:

       "REFRESH" - updates coloring
       "Status" - plugin activity status for the current editor
         <Param1> - number:
           0 - disabled;
           1 - included;
         If the current value changes and returns the previous value.
         If not specified, returns the current value for this editor.
       "Crossvisible" - visibility and type of cross in the editor
         Returns the current style of the cross and display rules for this editor.
          <Outparam1> - number:
            0 - disabled;
            1 - included;
            2 - according to the scheme parameters
          <Outparam2> - number:
            0 - not displayed;
            1 - vertical;
            2 - horizontal;
            3 - Full Cross
         If additional parameters are specified, then changes the style and display rules.
          <Param1> - number:
            0 - disabled;
            1 - included;
            2 - according to the scheme parameters
          <Param2> - optional, number:
            1 - vertical;
            2 - horizontal;
            3 - Full Cross
       "Pair" - pair items display status
         <Param1> - number:
            0 - disabled;
            1 - included;
         If the current value changes and returns the previous value. If not specified returns the current value for this editor.
       "SYNTAX" - syntax display status
         <Param1> - number:
            0 - Disabled;
            1 - included;
         If the current value changes and returns the previous value. If not specified returns the current value for this editor.
        "Progress" - Returns the percentage of the parsing file in the editor. An integer value.
@hrd
$# Color style selection
    List of all available color schemes. You can choose what you need.

@exception
$# Exception occured
    Exception happened while FarColorer work. All further processing would be disabled. You can re-enable FarColorer from it's settings menu after locating and removing exception cause. All extended information in FarColorer logging file (colorer.log by default)

@filetypechoose
$# List types
    The list contains all of the supported file types. By choosing any, you force the type of coloring the current file.

    #Automatic detection# - select the type of file produced plugin built rules.
    #Favorites# - The list of chosen types. Add to "Favorites" is produced by pressing the Ins, delete - Delete.
    #Hot keys# - to assign a hot key to the file type you need to press F4, and in the dialog box to specify the key.

    Hot keys and being in the group "Favorites" can also be customized through the ~Schemes settings.~@confighrc@ These are the parameters 'hotkey' and 'favorite' for any of the schemes.

@keyassign
$# Define key
    Keys 0-9, A-Z

@author
$^#FarColorer is a syntax highlighting plugin for FAR Manager.
    #Plugin home site#
           http://colorer.sf.net/

    #Igor Ruskih# (Cail Lomecb) Copyright (c) 1999-2009
           email  : irusskih at gmail dot com
           web    : http://cail.nm.ru

    #Eugene Efremov#
           email  : 4mirror at mail dot ru

    #ctapmex# (Aleksey Dobrunov) Copyright (c) 2009-2021
           email  : ctapmex at gmail dot com
           web    : http://dobrunov.ru
