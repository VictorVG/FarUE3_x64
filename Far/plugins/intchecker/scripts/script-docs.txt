Скрипты управления и макросы плагина.

1 Макросы плагина.

Вместе с плагином поставляются скрипты управления содержащие макросы позволяющие
упростить некоторые часто используемые операции. Они расположены в подкаталоге
Scripts плагина в двух Lua скриптах:

IntChecker.Run.lua - этот скрипт содержит макросы:

 - вызов основного меню плагина по Alt-H;

- запуск проверки целостности файлов по имеющемуся файлу хэшей который может
быть записан в одном из распознаваемых плагином форматов:

 GNU       : <hash> *<path>

   или

 BSD (UNIX): <alg> (<path>) = <hash>

где, <hash> - значение хэша;
     <path> - путь к файлу для которого вычислен хэш;
     <alg> - имя алгоритма, используется только в BSD (UNIX) формате записи.

Имена файлов хэшей должны иметь расширение в зависимости от алгоритма:

   CRC-32 - .sfv; MD5 - .md5; SHA1 - .sha1; SHA-256 - .sha256;
   SHA-512 - .sha512; SHA3-512 - .sha3 и для Whirlpool - .wrpl

этот макрос запускается либо по Enter либо по нажатию колеса мыши или
средней кнопки мыши.

В макрос встроена проверка на условие "Командная строка пуста?" - если курсор
стоит на хэшфайле и командная строка не пустая, то макрос спросит вас что
сделать:

 при нажатии OK - будет запущена набранная в командной строке команда;
 при нажатии Cancel - будет проверена целостность указанных в хэшфайле объектов

Оговорка: По умолчанию выполнение команды считается более важной задачей.

Примечание:

Существуют и другие криптографические алгоритмы длина хэша у которых совпадает
с поддерживаемыми плагином, но если вы решите проверить с их помощью файлы, то
даже при корректном формате хэшфайла получите сообщение плагина "Файл не
является списком хешей", а дальше будете долго и мучительно пытаться понять
почему плагин его отвергает?

- пошаговый мастер вычисления хэша запускаемый по Alt-G.

Мастер работает для файла под курсором, выбранных или всех файлов в текущем
каталоге, рекурсивно для текущего каталога, произвольного файла или рекурсивно
поддерева каталогов (выводится запрос пути) и позволяет вывести вычисленный
хэш на экран, либо скопировать его в буфер обмена ОС, или записать в файл.

Для операций копирования в буфер обмена или записи в файл вы можете выбрать
любой из двух форматов выходной строки - GNU или BSD (UNIX) и пути в стиле
Windows (обратный слэш - "\") или UNIX (прямой слэш - "/").

Доступные на текущем шаге мастера хоткеи выводятся в заголовке его поля ввода,
регистр символов игнорируется. Каталоги и файлы нулевой длинны при расчёте
хэша пропускаются, в вывод мастера попадают только файлы, если они находятся в
подкаталоге, то для них указывается относительный путь. За точку отсчёта
принимается указанный вами каталог, формат записи сходен с форматом записи BSD
UNIX:

 SHA-256 (test.txt) = <SHA256SUM>
 SHA-256 (Cat\test.txt) = <SHA256SUM>     ---  Windows стиль пути
 SHA-256 (Cat/test.txt) = <SHA256SUM>     ---  UNIX стиль пути

Система команд макроса достаточно проста:

Режимы для объектов на активной панели:

F - файл. Автоматика скрипта различает когда мы хотим посчитать хэши для
    отдельного файла под курсором или группы выделенных файлов и каталогов.

D - аналогичен режиму F, но для всех файлов в текущем каталоге

Для произвольных файлов или каталогов находящихся вне панели, в т.ч. и на
сетевых ресурсах:

U - выводится запрос на ввод UNC пути который может указывать на произвольный
    файл либо каталог. Путь может вводится в любом из допустимых UNC форматов:

    \\SERVER\Share\ObjectPath
    Disk:\path

    и иметь любой вариант стиля записи пути к файлу (Windows/UNIX). chex()
    сама преобразует путь в используемый внутри Windows формат записи и при
    необходимости по возможности исправляет ошибки ввода.

R - учитывать подкаталоги. Флаг R (от Recursive) применим только в комбинации
    с командами D или U. В команде F флаг R игнорируется.

Формат вывода:

B - в стиле BSD (UNIX)

G - в стиле GNU LINUX

Стиль пути к файлам:

W - Windows

U - UNIX

Макрос имеет встроенные средства коррекции ряда типичных ошибок набора, таких
как неправильная раскладка клавиатуры, неверный набок команды.

В тех случаях когда скрипт сам не сможет исправить ошибку ввода будет выбран
режим по умолчанию:

 Файл под курсором (F), вывод на экран (D), считаем MD5, формат вывода GNU,
 стиль пути Windows

В случае возникновения ошибок по возможности будет проведена диагностика с
выводом сообщения об ошибке и статистикой. В обычных случаях статистика не
выводится за ненужностью, хотя и возвращается chex().

Статистика включает счётчики успешно обработанных файлов и числа ошибки.

Работу скрипта можно прервать в любой момент нажатием кнопки ESC при этом
будет выведено сообщение об отмене операций пользователем.

Выходной массив сохраняется в каталоге обрабатываемого объекта.

Если файл не может быть обработан, например если он нулевой длины или доступ
запрещён (Access Denied) то в выходной массив и в статистику обработанных
файлов он не включается, а в случае если доступ к объекту запрещён (Access
Denied) то он включается в счётчик ошибок.

Коды возврата chex() (1 - 6) расшифровываются скриптом который выводит и
диагностические сообщения пользователю.

Список кодов возврата chex() v2.1:

 0 - без ошибок;
 1 - Пустой каталог;
 2 - Рекурсия запрещена и указанный объект не найден;
 3 - Доступ к файлу запрещён, он пропущен, доступные файлы обработаны;
 4 - Доступ к каталогу запрещён, он пропущен, доступные файлы обработаны;
 5 - Выбранный объект не существует;
 6 - Пользователь нажал кнопку отмены (ESC), не обработанные файлы будут
     пропущены, а обработка текущего файла прервана;

Колы возврата chex() v1.0 отличаются от кодов возврата chex() v2.1:

 0 - без ошибок;
 1 - Пустой каталог, рекурсия запрещена или файлы не найдены;
 2 - Пусть не существует;
 3 - Доступ запрещён;
 4 - Пользователь нажал кнопку отмены (ESC), не обработанные файлы будут
     пропущены, а обработка текущего файла прервана;

2. Демо-скрипт IntChecker.GetFileHash.lua

Этот скрипт содержит учебный пример вызова плагина из макросов и вы можете
посмотреть в нём как работать с плагином из макросов, в том числе и
в прерываемых диалогах.

3. Установка макросов.

Установка макросов аналогична другим макросам в Far3 - скопируйте выбранный
файл скрипта в каталог скриптов Far (путь к нему настраивается в Far.exe.ini)
и перезапустите Far, либо если у вас установлен скрипт перезагрузки макросов,
например ReloadMacros.lua можно с его помощью перезагрузить макросы. Главное,
чтобы Far обновил внутренний список доступных в данный момент макросов и тогда
они будут у вас работать.