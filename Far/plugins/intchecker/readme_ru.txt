Плагин: Integrity Checker
Версия: 2.7.2
Автор: Ariman

--------------------------------------------------------

1. Описание.

Плагин предназначен для генерации хеш сумм различных форматов для файлов
и проверки файлов на целостность по предварительно созданным хешам.

Поддерживаются каталоги неограниченной вложенности.

Поддерживаемые алгоритмы:

CRC32, MD5, SHA1, SHA-256, SHA-512, SHA3-512, Whirlpool

Плагин базируется на коде программы RHash (http://rhash.anz.ru/).

2. Требования.

Минимальная версия FAR-а для работы плагина 2.0.1807 и 3.0.5354

3. Гарантии.

Плагин предоставляется по принципу "as-is" без каких-либо гарантий,
явных или неявных. Используйте на свой страх и риск. ;-)

4. Лицензия.

Плагин распространяется под лицензией GNU GPL v3.
Текст лицензии можно найти в соотвествующем файле в каталоге плагина.

4. Работа с плагином.

Вызов плагина может осуществлятся несколькими методами:

- через список плагинов по F11
- через префикс (настраиваемый, по умолчанию check:)

Работает только с файловыми панелями. На попытку вызова с панели какого-либо
другого плагина никакой реакции не будет.

4.1. Генерация хешей.

Алгоритм можно выбрать в соотвествующем диалоге плагина.
Алгоритм по умолчанию можно выбрать в меню конфигурации плагина.
Плагин создает 2 типа файлов с хешами: .sfv (CRC32) и md5sum-like файлы,
поддерживаемые стандартными утилитами md5sum, sha1sum, sha256sum и т.п.
В режиме чтения (для верификации) плагин понимает хеш файлы формата BSD.
Можно создавать как один общий файл с хешами, так и отдельные для каждого выделенного файла.

4.2. Проверка хешей.

Если в панели выбран один файл, то в меню добавится новый пункт по проверке файлов.
Если файл успешно распознан, то запуститься верификация файлов.
Также доступно сравнение хеш-суммы единичного файла с содержимым буфера обмена.

4.3. Сравнение файлов с разных панелей.

В качестве доп. функциональности можно сравнить файлы с одинковыми именами
с разных файловых панелей. Сравнение производиться по алгоритму выбранному
в диалоге плагина. Если на обоих панелях выбран один и тот же каталог или
вторая панель принадлежит другому плагину, данная функция будет недоступна.

5. Скрипты управления и макросы плагина.

5.1 Макросы плагина.

Вместе с плагином поставляются скрипты управления содержащие макросы позволяющие
упростить некоторые часто используемые операции. Они расположены в подкаталоге
Scripts плагина в двух Lua скриптах:

IntChecker.Run.lua - этот скрипт содержит макросы:

 - вызов основного меню плагина по Alt-H;

- запуск проверки целостности файлов по имеющемуся файлу хэшей который может
быть записан в одном из распознаваемых плагином форматов:

 GNU       : <hash> *<path>
   или
 BSD (UNIX): <alg> (<path>) = <hash>

где, <hash> - значение хэша;
     <path> - путь к файлу для которого вычислен хэш;
     <alg> - имя алгоритма, используется только в BSD (UNIX) формате записи.

Имена файлов хэшей должны иметь расширение в зависимости от алгоритма:

   CRC-32 - .sfv; MD5 - .md5; SHA1 - .sha1; SHA-256 - .sha256;
   SHA-512 - .sha512; SHA3-512 - .sha3 и для Whirlpool - .wrpl

этот макрос запускается либо по Enter либо по нажатию колеса мыши или
средней кнопки мыши.

Примечание:

Существуют и другие криптографические алгоритмы длина хэша у которых
совпадает с поддерживаемымм плагином, но если вы решите проверить с их
помощью файлы, то при корректном формате хэш файла получите сообщение о
что файл не тот, а дальше будете искать когда и кто вам его подменил.

- мастер вычисления хэша для файла под курсором запускаемый по Alt-G.

мастер работает только длЯ файла под курсором и позволяет вывести вычисленный
хэш на экран, либо скопировать его в буфер обмена ОС, или записать в файл.
Для операций копирования в буфер обмена или записи в файл вы можете выбрать
любой из двух форматов выходной строки - GNU или BSD (UNIX).

Все хоткеи доступные на данном шаге мастера выводятся в заголовке его поля
ввода, регистр символов игнорируется.

Так как команда gethash плагина работает только с файлом под курсором, то
люыбые иные вызовы мастера пропускаются.

5.2. Демо-скрипт IntChecker.GetFileHash.lua

Этот скрипт содержит учебный пример вызова плагина из макросов и вы можете
посмотреть в нём как работать с плагином из макросов.

5.3. Установка макросов.

Установка макросов аналогична другим макросам в Far3 - скопируйте выбранный
файл скрипта в каталог скриптов Far (путь к нему настраивается в Far.exe.ini)
и перезапустите Far, либо если у вас установлен скрипт перезагрузки макросов,
например ReloadMacros.lua можно с его помощью перезагрузить макросы. Главное,
чтобы Far обновил внутренний список доступных в данный момент макросов и тогда
они будут у вас работать.

6. Контакты.

Сообщения об ошибках, предложения и т.д. отправляйте по адресу ariman@inbox.ru